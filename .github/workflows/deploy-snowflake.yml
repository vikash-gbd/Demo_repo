name: Deploy to Snowflake using Liquibase

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and Extract Liquibase CLI
        run: |
          rm -rf liquibase-cli liquibase.tar.gz liquibase-*
          mkdir -p liquibase-cli
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          tar -xzf liquibase.tar.gz
          mv liquibase-4.24.0/* liquibase-cli/
          chmod +x liquibase-cli/liquibase

      - name: Inject Secrets into liquibase.properties
        run: |
          sed -i "s|__SNOWFLAKE_ACCOUNT__|$SNOWFLAKE_ACCOUNT|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_USERNAME__|$SNOWFLAKE_USERNAME|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_PASSWORD__|$SNOWFLAKE_PASSWORD|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_ROLE__|$SNOWFLAKE_ROLE|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_WAREHOUSE__|$SNOWFLAKE_WAREHOUSE|g" liquibase.properties

      - name: Determine if this is the first commit
        id: check-previous
        run: |
          if git rev-list --count HEAD == 1; then
            echo "first_commit=true" >> $GITHUB_OUTPUT
          else
            echo "first_commit=false" >> $GITHUB_OUTPUT
          fi

      - name: Dry Run (updateSql) and changelogSync if first commit
        if: steps.check-previous.outputs.first_commit == 'true'
        run: |
          liquibase-cli/liquibase --defaultsFile=liquibase.properties updateSql
          liquibase-cli/liquibase --defaultsFile=liquibase.properties changelogSync

      - name: Apply Changes (update) if not first commit
        if: steps.check-previous.outputs.first_commit == 'false'
        run: |
          liquibase-cli/liquibase --defaultsFile=liquibase.properties update
