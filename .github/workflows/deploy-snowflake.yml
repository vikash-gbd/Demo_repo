name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_USERNAME: ${{ secrets.SF_USER }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}

    steps:
      - name: ðŸ§¾ Checkout Repository
        uses: actions/checkout@v3

      - name: â˜• Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: ðŸ“¦ Download Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli

      - name: ðŸš€ Run Liquibase
        run: |
          if [ ! -f ".liquibase-synced" ]; then
            echo "ðŸ§ª First-time run: dry-run + changelogSync"
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties updateSql
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties changelogSync
            cd ..
            touch .liquibase-synced

            # Commit .liquibase-synced to repo so future runs skip dry-run
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .liquibase-synced
            git commit -m "ðŸ”’ Marked Liquibase as synced (dry-run complete)"
            git push
          else
            echo "ðŸš€ Subsequent run: running liquibase update"
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties update
