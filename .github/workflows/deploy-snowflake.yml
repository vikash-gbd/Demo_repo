name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and extract Liquibase CLI
        run: |
          rm -rf liquibase-cli liquibase.tar.gz liquibase-4.24.0
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir -p liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli --strip-components=1
          rm -rf liquibase.tar.gz
          chmod +x liquibase-cli/liquibase

      - name: Replace placeholders in liquibase.properties
        run: |
          sed -i "s|__SNOWFLAKE_ACCOUNT__|${{ secrets.SF_URL }}|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_WAREHOUSE__|${{ secrets.SF_WAREHOUSE }}|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_ROLE__|${{ secrets.SF_ROLE }}|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_USERNAME__|${{ secrets.SF_USER }}|g" liquibase.properties
          sed -i "s|__SNOWFLAKE_PASSWORD__|${{ secrets.SF_PASSWORD }}|g" liquibase.properties

      - name: Check if this is first Liquibase deployment
        id: check-first-deploy
        run: |
          if [ ! -f .liquibase-deployed ]; then
            echo "first=true" >> $GITHUB_OUTPUT
          else
            echo "first=false" >> $GITHUB_OUTPUT
          fi

      - name: Dry run SQL and changelogSync (first deployment only)
        if: steps.check-first-deploy.outputs.first == 'true'
        run: |
          ./liquibase-cli/liquibase --defaultsFile=liquibase.properties updateSql > dryrun.sql
          ./liquibase-cli/liquibase --defaultsFile=liquibase.properties changelogSync
          touch .liquibase-deployed

      - name: Actual Liquibase update (subsequent deployments)
        if: steps.check-first-deploy.outputs.first == 'false'
        run: |
          ./liquibase-cli/liquibase --defaultsFile=liquibase.properties update
