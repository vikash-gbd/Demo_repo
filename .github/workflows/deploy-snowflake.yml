name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and extract Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli

      - name: Run Liquibase dry-run and sync on first commit only
        if: ${{ !startsWith(steps.check-synced.outputs.exists, 'true') }}
        run: |
          ./liquibase-cli/liquibase \
            --url="${{ secrets.SF_URL }}?warehouse=${{ secrets.SF_WAREHOUSE }}&db=${{ secrets.SF_DATABASE }}&schema=${{ secrets.SF_SCHEMA }}&role=${{ secrets.SF_ROLE }}" \
            --username="${{ secrets.SF_USER }}" \
            --password="${{ secrets.SF_PASSWORD }}" \
            --changeLogFile=liquibase/changelog/db.changelog.xml \
            updateSql

          ./liquibase-cli/liquibase \
            --url="${{ secrets.SF_URL }}?warehouse=${{ secrets.SF_WAREHOUSE }}&db=${{ secrets.SF_DATABASE }}&schema=${{ secrets.SF_SCHEMA }}&role=${{ secrets.SF_ROLE }}" \
            --username="${{ secrets.SF_USER }}" \
            --password="${{ secrets.SF_PASSWORD }}" \
            --changeLogFile=liquibase/changelog/db.changelog.xml \
            changelogSync

          echo "Dry-run and changelogSync done"
          touch .liquibase-synced

      - name: Commit marker file after first sync
        if: ${{ !startsWith(steps.check-synced.outputs.exists, 'true') }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .liquibase-synced
          git commit -m "Mark Liquibase changelog as synced"
          git push

      - name: Run Liquibase update after first sync
        if: ${{ startsWith(steps.check-synced.outputs.exists, 'true') }}
        run: |
          ./liquibase-cli/liquibase \
            --url="${{ secrets.SF_URL }}?warehouse=${{ secrets.SF_WAREHOUSE }}&db=${{ secrets.SF_DATABASE }}&schema=${{ secrets.SF_SCHEMA }}&role=${{ secrets.SF_ROLE }}" \
            --username="${{ secrets.SF_USER }}" \
            --password="${{ secrets.SF_PASSWORD }}" \
            --changeLogFile=liquibase/changelog/db.changelog.xml \
            update

      - name: Check if .liquibase-synced exists
        id: check-synced
        run: |
          if [ -f .liquibase-synced ]; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
