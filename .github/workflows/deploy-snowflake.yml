name: ðŸš€ Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

    steps:
      - name: ðŸ“¥ Checkout code
        uses: actions/checkout@v4

      - name: â˜• Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: ðŸ“¦ Download and extract Liquibase CLI
        run: |
          mkdir -p liquibase-cli
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz \
            | tar xz -C liquibase-cli --strip-components=1
          chmod +x liquibase-cli/liquibase

      - name: ðŸ”§ Replace placeholders in liquibase.properties
        run: |
          esc() { printf '%s\n' "$1" | sed -e 's/[\/&]/\\&/g'; }

          sed -i "s/__SNOWFLAKE_ACCOUNT__/$(esc "$SNOWFLAKE_ACCOUNT")/g" liquibase.properties
          sed -i "s/__SNOWFLAKE_WAREHOUSE__/$(esc "$SNOWFLAKE_WAREHOUSE")/g" liquibase.properties
          sed -i "s/__SNOWFLAKE_ROLE__/$(esc "$SNOWFLAKE_ROLE")/g" liquibase.properties
          sed -i "s/__SNOWFLAKE_USERNAME__/$(esc "$SNOWFLAKE_USERNAME")/g" liquibase.properties
          sed -i "s/__SNOWFLAKE_PASSWORD__/$(esc "$SNOWFLAKE_PASSWORD")/g" liquibase.properties

      - name: ðŸ“„ Detect if this is first-time deployment
        id: check
        run: |
          if [ ! -f liquibase/.liquibase-checksums.md5 ]; then
            echo "first_time=true" >> $GITHUB_OUTPUT
          else
            echo "first_time=false" >> $GITHUB_OUTPUT
          fi

      - name: ðŸ§ª Dry run + changelogSync on first commit
        if: steps.check.outputs.first_time == 'true'
        run: |
          liquibase-cli/liquibase updateSql
          liquibase-cli/liquibase changelogSync

      - name: ðŸš€ Run Liquibase update (future commits)
        if: steps.check.outputs.first_time == 'false'
        run: |
          liquibase-cli/liquibase update
