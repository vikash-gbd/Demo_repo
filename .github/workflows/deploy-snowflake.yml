name: ❄️ Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
      SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3

      - name: ☕ Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'

      - name: 📦 Download Liquibase CLI
        run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli --strip-components=1
          rm liquibase.tar.gz

      - name: 🧪 Run Liquibase dry-run (updateSql) + changelogSync (only once)
        run: |
          if [ ! -f ".liquibase-synced" ]; then
            echo "🧪 First-time run: dry-run + changelogSync"
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties updateSql
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties changelogSync
            cd ..
            touch .liquibase-synced

            # Commit the marker so this block never runs again
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add .liquibase-synced
            git commit -m "🔒 Marked Liquibase as synced (dry-run complete)"
            git push
          else
            echo "🚀 Subsequent run: running liquibase update"
            cd liquibase-cli && ./liquibase --defaultsFile=../liquibase.properties update
          fi
