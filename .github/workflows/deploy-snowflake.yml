name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and Extract Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli

      - name: Download Snowflake JDBC Driver
        run: |
          mkdir -p lib
          curl -o lib/snowflake-jdbc.jar https://repo1.maven.org/maven2/net/snowflake/snowflake-jdbc/3.13.30/snowflake-jdbc-3.13.30.jar

      - name: Run Liquibase
        run: |
          if [ ! -f ".liquibase-synced" ]; then
            echo "ðŸ§ª First run: Running dry-run and changelogSync..."

            cd liquibase-cli && ./liquibase \
              --defaultsFile=../liquibase.properties \
              updateSql

            cd liquibase-cli && ./liquibase \
              --defaultsFile=../liquibase.properties \
              changelogSync

            echo "âœ… Dry-run and changelogSync complete"
            touch ../.liquibase-synced
          else
            echo "ðŸš€ Running actual Liquibase update..."
            cd liquibase-cli && ./liquibase \
              --defaultsFile=../liquibase.properties \
              update
          fi
        env:
          SNOWFLAKE_USERNAME: ${{ secrets.SF_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
