name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download and extract Liquibase CLI
        run: |
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz -o liquibase.tar.gz
          mkdir liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli

      - name: Check if .liquibase-synced exists
        id: check-synced
        run: |
          if [ -f .liquibase-synced ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Run dry-run and changelogSync (first commit only)
        if: steps.check-synced.outputs.exists == 'false'
        env:
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          cd liquibase-cli && ./liquibase \
            --defaultsFile=../liquibase.properties \
            updateSql

          cd liquibase-cli && ./liquibase \
            --defaultsFile=../liquibase.properties \
            changelogSync

          echo "Dry-run and changelogSync complete"
          touch .liquibase-synced

      - name: Run actual Liquibase update (future commits)
        if: steps.check-synced.outputs.exists == 'true'
        env:
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          cd liquibase-cli && ./liquibase \
            --defaultsFile=../liquibase.properties \
            update
