name: Deploy to Snowflake via Liquibase

on:
  push:
    branches:
      - main

jobs:
  liquibase-deploy:
    runs-on: ubuntu-latest

    env:
      SF_USER:       ${{ secrets.SF_USER }}
      SF_PASSWORD:   ${{ secrets.SF_PASSWORD }}
      SF_URL:        ${{ secrets.SF_URL }}
      SF_ROLE:       ${{ secrets.SF_ROLE }}
      SF_WAREHOUSE:  ${{ secrets.SF_WAREHOUSE }}
      SF_DATABASE:   ${{ secrets.SF_DATABASE }}
      SF_SCHEMA:     ${{ secrets.SF_SCHEMA }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download & Extract Liquibase CLI
        run: |
          rm -rf liquibase-cli liquibase.tar.gz
          curl -sL https://github.com/liquibase/liquibase/releases/download/v4.24.0/liquibase-4.24.0.tar.gz \
            -o liquibase.tar.gz
          mkdir -p liquibase-cli
          tar -xzf liquibase.tar.gz -C liquibase-cli --strip-components=1
          chmod +x liquibase-cli/liquibase
          rm liquibase.tar.gz

      - name: Decide Dry-Run vs Update
        id: choose
        run: |
          if [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "cmd=updateSql && liquibase-cli/liquibase changelogSync" >> $GITHUB_OUTPUT
          else
            echo "cmd=update" >> $GITHUB_OUTPUT
          fi

      - name: Execute Liquibase
        run: |
          echo "Running: ${{ steps.choose.outputs.cmd }}"
          eval "./liquibase-cli/liquibase --defaultsFile=liquibase.properties ${{ steps.choose.outputs.cmd }}"

